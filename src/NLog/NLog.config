<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true">
  <extensions>
    <add assembly="NLog.Web.AspNetCore" />
  </extensions>

  <targets>
    <!-- Log all logs -->
    <target xsi:type="File" name="all" fileName="${var:configDir}\nlog-all-${shortdate}.log"
            layout="${longdate}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}" />

    <!-- Log only efcore logs -->
    <target xsi:type="File" name="efcore" fileName="${var:configDir}\nlog-efcore-${shortdate}.log"
            layout="${longdate}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}" />

    <!-- Log only own logs -->
    <target xsi:type="File" name="app" fileName="${var:configDir}\nlog-app-${shortdate}.log"
            layout="${longdate}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}" />

    <!-- Write to the void aka just remove -->
    <target xsi:type="Null" name="blackhole" />

    <!-- Write to DB -->
    <target xsi:type="FallbackGroup" name="database" returnToFirstOnSuccess="true">
      <target name="databaseSuccess" xsi:type="Database">
        <connectionString>${var:connectionString}</connectionString>
        <commandText>
          insert into dbo.Log (
          Application, Logged, Level, Message, UserName, ServerName, Url, Logger, CallSite, Exception)
          values (
          @Application, @Logged, @Level, @Message, @UserName, @ServerName, @Url, @Logger, @Callsite, @Exception);
        </commandText>

        <parameter name="@application" layout="LeaseApi" />
        <parameter name="@logged" layout="${date}" />
        <parameter name="@level" layout="${level}" />
        <parameter name="@message" layout="Action: ${aspnet-mvc-action} | ${message}" />
        <parameter name="@userName" layout="${aspnet-user-indentity}" />
        <parameter name="@serverName" layout="${machinename}" />
        <parameter name="@url" layout="${aspnet-request-url}" />
        <parameter name="@logger" layout="${logger}" />
        <parameter name="@callSite" layout="${callsite:filename=true}" />
        <parameter name="@exception" layout="${exception:tostring}" />
      </target>
      <target xsi:type="Null" name="databaseErrorFallBack" />
    </target>
  </targets>

  <rules>
    <!--All logs-->
    <logger name="*" minlevel="Trace" writeTo="all">
      <filters>
        <when condition="'${var:appEnvironment}' != 'Local'" action="Ignore" />
      </filters>
    </logger>

    <!--EfCore logs-->
    <logger name="Microsoft.EntityFrameworkCore.*" minLevel="trace" writeTo="efcore">
      <filters>
        <when condition="'${var:appEnvironment}' != 'Local'" action="Ignore" />
      </filters>
    </logger>

    <!--Enable write to database efcore logs-->
    <!--<logger name="Microsoft.EntityFrameworkCore.*" minLevel="trace" writeTo="database" />-->

    <!--Remove all Microsoft.* logs-->
    <logger name="Microsoft.*" minlevel="Trace" writeTo="blackhole" final="true" />

    <!--App only logs-->
    <logger name="*" minlevel="Trace" writeTo="app">
      <filters>
        <when condition="'${var:appEnvironment}' != 'Local'" action="Ignore" />
      </filters>
    </logger>

    <!--Write to DB-->
    <logger name="*" minlevel="Trace" writeTo="database" />
  </rules>
</nlog>